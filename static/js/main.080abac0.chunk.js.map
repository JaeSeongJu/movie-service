{"version":3,"sources":["assets/noPosterSmall.png","Components/Loader.js","Routes/Detail/DetailPresenter.js","api.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Tv/TVPresenter.js","Routes/Tv/index.js","Routes/Tv/TVContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","role","aria-label","Backdrop","props","bgImage","Content","Cover","Data","Title","h3","ItemContainer","Item","span","Divider","Overview","p","Icon","a","Image","img","Info","Trailer","YouTube","Production","DetailPresenter","result","loading","error","Helmet","Loader","original_title","original_name","backdrop_path","poster_path","require","release_date","first_air_date","runtime","episode_run_time","genres","map","genre","index","length","name","imdb_id","href","target","src","alt","overview","undefined","videos","results","videoId","key","production_companies","e","production_countries","seasons","season_number","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","DetailContainer","pathname","location","state","isMovie","includes","this","match","push","history","parsedId","parseInt","isNaN","data","setState","React","Component","Grid","Section","title","children","Text","color","Message","text","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","to","substring","HomePresenter","nowPlaying","popular","upcoming","movie","vote_average","HomeContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","SearchContainer","event","preventDefault","searchByTerm","TVPresenter","topRated","airingToday","TVContainer","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","className","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"+GAAA,OAAe,cAA0B,2C,kXCGzC,IAAMA,EAAYC,IAAOC,IAAV,KASA,oBACb,cAACF,EAAD,UACE,sBAAMG,KAAK,MAAMC,aAAW,UAA5B,uB,omECPJ,IAAMJ,EAAYC,IAAOC,IAAV,KAOTG,EAAWJ,IAAOC,IAAV,KAMY,SAACI,GAAD,OAAWA,EAAMC,WAQrCC,EAAUP,IAAOC,IAAV,KAQPO,EAAQR,IAAOC,IAAV,KAEe,SAACI,GAAD,OAAWA,EAAMC,WAOrCG,EAAOT,IAAOC,IAAV,KAKJS,EAAQV,IAAOW,GAAV,KAILC,EAAgBZ,IAAOC,IAAV,KAIbY,EAAOb,IAAOc,KAAV,KAEJC,EAAUf,IAAOc,KAAV,KAIPE,EAAWhB,IAAOiB,EAAV,KAORC,EAAOlB,IAAOmB,EAAV,KAEJC,EAAQpB,IAAOqB,IAAV,KAQLC,EAAOtB,IAAOC,IAAV,KAIJsB,EAAUvB,YAAOwB,IAAPxB,CAAH,KAKPyB,EAAazB,IAAOC,IAAV,KAiIDyB,GAtHS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,EAAoBC,MAApB,OACtBD,EACE,qCACE,cAACE,EAAA,EAAD,UACE,wDAEF,cAACC,EAAD,OAGF,eAAC,EAAD,WACE,cAACD,EAAA,EAAD,UACE,kCACGH,EAAOK,eAAiBL,EAAOK,eAAiBL,EAAOM,cAAe,IADzE,iBAKF,cAAC7B,EAAD,CACEE,QAAO,6CAAwCqB,EAAOO,iBAExD,eAAC3B,EAAD,WACE,cAACC,EAAD,CACEF,QACEqB,EAAOQ,YAAP,6CAC0CR,EAAOQ,aAC7CC,EAAQ,MAGhB,eAAC3B,EAAD,WACE,cAACC,EAAD,UACGiB,EAAOK,eACJL,EAAOK,eACPL,EAAOM,gBAEb,eAACrB,EAAD,WACE,cAACC,EAAD,UACGc,EAAOU,aACJV,EAAOU,aACPV,EAAOW,iBAEb,cAACvB,EAAD,qBACA,eAACF,EAAD,WACGc,EAAOY,QAAUZ,EAAOY,QAAUZ,EAAOa,iBAAiB,GAD7D,UAGA,cAACzB,EAAD,qBACA,cAACF,EAAD,UACGc,EAAOc,QACNd,EAAOc,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAChBA,IAAUjB,EAAOc,OAAOI,OAAS,EAC7BF,EAAMG,KADV,UAEOH,EAAMG,KAFb,YAKN,cAAC/B,EAAD,qBACCY,EAAOoB,QACN,cAAC7B,EAAD,CACE8B,KAAI,qCAAgCrB,EAAOoB,SAC3CE,OAAO,SAFT,SAIE,cAAC7B,EAAD,CACE8B,IAAI,2CACJC,IAAI,mBAIR,cAACtC,EAAD,UAAO,uBAGX,cAACG,EAAD,UAAWW,EAAOyB,WAClB,eAAC9B,EAAD,gBACgC+B,IAA7B1B,EAAO2B,OAAOC,QAAQ,GACrB,cAAChC,EAAD,CAASiC,QAAS7B,EAAO2B,OAAOC,QAAQE,MAExC,cAAC5C,EAAD,oCAGF,eAACY,EAAD,gBACsC4B,IAAnC1B,EAAO+B,qBAAqB,GAC3B,cAAC7C,EAAD,UACG,iCACCc,EAAO+B,qBAAqBhB,KAAI,SAACiB,EAAGf,GAAJ,iBAAkBe,EAAEb,WAGxD,cAACjC,EAAD,0EAIDc,EAAOiC,qBACN,cAAC/C,EAAD,UACG,kCACCc,EAAOiC,qBAAqBlB,KAAI,SAACiB,EAAGf,GAAJ,iBAAkBe,EAAEb,WAGxD,cAACjC,EAAD,4EAIDc,EAAOkC,QACN,cAAChD,EAAD,UACG,6BACCc,EAAOkC,QAAQnB,KACb,SAACiB,GAAD,iBAAWA,EAAEG,cAAb,cAAgCH,EAAEb,WAIxC,cAACjC,EAAD,oB,SC3MVkD,G,QAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,GACC,kBAAMP,GAAIQ,IAAI,sBADfD,GAED,kBAAMP,GAAIQ,IAAI,mBAFbD,GAGF,kBAAMP,GAAIQ,IAAI,kBAHZD,GAIE,SAACE,GAAD,OACXT,GAAIQ,IAAJ,gBAAiBC,GAAM,CACrBL,OAAQ,CACNM,mBAAoB,aAPfH,GAUH,SAACI,GAAD,OACNX,GAAIQ,IAAI,eAAgB,CACtBJ,OAAQ,CACNQ,MAAOC,mBAAmBF,OAKrBG,GACD,kBAAMd,GAAIQ,IAAI,iBADbM,GAEF,kBAAMd,GAAIQ,IAAI,eAFZM,GAGE,kBAAMd,GAAIQ,IAAI,oBAHhBM,GAIC,SAACL,GAAD,OACVT,GAAIQ,IAAJ,aAAcC,GAAM,CAClBL,OAAQ,CACNM,mBAAoB,aAPfI,GAUH,SAACH,GAAD,OACNX,GAAIQ,IAAI,YAAa,CACnBJ,OAAQ,CACNQ,MAAOC,mBAAmBF,OCvCnBI,G,kDCGb,WAAYzE,GAAQ,IAAD,sBACjB,cAAMA,GADW,IAGH0E,EACV1E,EADF2E,SAAYD,SAHG,OAKjB,EAAKE,MAAQ,CACXtD,OAAQ,KACRE,MAAO,KACPD,SAAS,EACTsD,QAASH,EAASI,SAAS,YATZ,E,mMAmBbC,KAAK/E,MAHKmE,E,EADZa,MACElB,OAAUK,GAEDc,E,EAAXC,QAAWD,KAELJ,EAAYE,KAAKH,MAAjBC,QACFM,EAAWC,SAASjB,IACtBkB,MAAMF,G,yCACDF,EAAK,M,UAEV3D,EAAS,K,UAEPuD,E,kCACwBZ,GAAsBkB,G,iBAAvC7D,E,EAANgE,K,yCAEuBd,GAAiBW,G,iBAAlC7D,E,EAANgE,K,0DAGLP,KAAKQ,SAAS,CAAE/D,MAAO,yB,yBAEvBuD,KAAKQ,SAAS,CAAEhE,SAAS,EAAOD,W,kKAI1B,IAAD,EAC4ByD,KAAKH,MAAhCtD,EADD,EACCA,OAAQE,EADT,EACSA,MAAOD,EADhB,EACgBA,QACvB,OAAO,cAAC,GAAD,CAAiBD,OAAQA,EAAQE,MAAOA,EAAOD,QAASA,Q,GA1CtCiE,IAAMC,W,waCAnC,IAAM/F,GAAYC,IAAOC,IAAV,MAMTS,GAAQV,IAAOc,KAAV,MAKLiF,GAAO/F,IAAOC,IAAV,MAsBK+F,GAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAAC,GAAD,WACE,cAAC,GAAD,UAAQD,IACR,cAACF,GAAD,UAAOG,Q,gOCrBX,IAAMnG,GAAYC,IAAOC,IAAV,MAMTkG,GAAOnG,IAAOc,KAAV,MACC,SAACT,GAAD,OAAWA,EAAM+F,SAcbC,GAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OACd,cAAC,GAAD,UACE,cAACD,GAAD,CAAMC,MAAOA,EAAb,SAAqBE,O,+8BCXzB,IAAMvG,GAAYC,IAAOC,IAAV,MAITmB,GAAQpB,IAAOC,IAAV,MACe,SAACI,GAAD,OAAWA,EAAMkG,SAQrCC,GAASxG,IAAOc,KAAV,MAQN2F,GAAiBzG,IAAOC,IAAV,KAIdmB,GAGAoF,IAMA9F,GAAQV,IAAOc,KAAV,MAKL4F,GAAO1G,IAAOc,KAAV,MAwCK6F,GAnCA,SAAC,GAAD,IAAGnC,EAAH,EAAGA,GAAIoC,EAAP,EAAOA,SAAUX,EAAjB,EAAiBA,MAAOY,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,KAAhC,IAAsC5B,eAAtC,gBACb,cAAC,IAAD,CAAM6B,GAAI7B,EAAO,iBAAaV,GAAb,gBAA6BA,GAA9C,SACE,eAAC,GAAD,WACE,eAACiC,GAAD,WACE,cAAC,GAAD,CACEF,MACEK,EAAQ,yCAC8BA,GAClCxE,EAAQ,MAGhB,eAACoE,GAAD,WACE,sBAAMtG,KAAK,MAAMC,aAAW,SAA5B,0BAEQ,IACP0G,EAJH,YAOF,cAAC,GAAD,UACGZ,EAAMpD,OAAS,GAAf,UAAuBoD,EAAMe,UAAU,EAAG,IAA1C,OAAqDf,IAExD,cAACS,GAAD,UAAOI,U,2FC7Db,IAAM/G,GAAYC,IAAOC,IAAV,MA2EAgH,GAvEO,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,SAAUxF,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,MAA3C,OACpB,qCACE,cAACC,EAAA,EAAD,UACE,uDAEDF,EACC,cAACG,EAAD,IAEA,eAAC,GAAD,WACE,cAACD,EAAA,EAAD,UACE,uDAEDoF,GAAcA,EAAWrE,OAAS,GACjC,cAAC,GAAD,CAASoD,MAAM,cAAf,SACGiB,EAAWxE,KAAI,SAAC2E,GAAD,OACd,cAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACVoC,SAAUS,EAAMlF,YAChB8D,MAAOoB,EAAMrF,eACb6E,OAAQQ,EAAMC,aACdR,KAAMO,EAAMhF,aACZ6C,SAAS,GANJmC,EAAM7C,SAWlB4C,GAAYA,EAASvE,OAAS,GAC7B,cAAC,GAAD,CAASoD,MAAM,kBAAf,SACGmB,EAAS1E,KAAI,SAAC2E,GAAD,OACZ,cAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACVoC,SAAUS,EAAMlF,YAChB8D,MAAOoB,EAAMrF,eACb6E,OAAQQ,EAAMC,aACdR,KAAMO,EAAMhF,aACZ6C,SAAS,GANJmC,EAAM7C,SAWlB2C,GAAWA,EAAQtE,OAAS,GAC3B,cAAC,GAAD,CAASoD,MAAM,iBAAf,SACGkB,EAAQzE,KAAI,SAAC2E,GAAD,OACX,cAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACVoC,SAAUS,EAAMlF,YAChB8D,MAAOoB,EAAMrF,eACb6E,OAAQQ,EAAMC,aACdR,KAAMO,EAAMhF,aACZ6C,SAAS,GANJmC,EAAM7C,SAWlB3C,GAAS,cAAC,GAAD,CAASuE,MAAM,UAAUE,KAAMzE,WCpElC0F,G,4MCGbtC,MAAQ,CACNiC,WAAY,KACZE,SAAU,KACVD,QAAS,KACTtF,MAAO,KACPD,SAAS,G,qNAOG0C,K,uBADS4C,E,EAAjBvB,KAAQpC,Q,SAIAe,K,uBADS8C,E,EAAjBzB,KAAQpC,Q,UAIAe,K,iBADS6C,E,EAAjBxB,KAAQpC,QAEV6B,KAAKQ,SAAS,CACZsB,aACAE,WACAD,Y,kDAGF/B,KAAKQ,SAAS,CACZ/D,MAAO,kC,yBAGTuD,KAAKQ,SAAS,CACZhE,SAAS,I,kKAKL,IAAD,EACmDwD,KAAKH,MAAvDiC,EADD,EACCA,WAAYE,EADb,EACaA,SAAUD,EADvB,EACuBA,QAAStF,EADhC,EACgCA,MAAOD,EADvC,EACuCA,QAC9C,OACE,cAAC,GAAD,CACEsF,WAAYA,EACZE,SAAUA,EACVD,QAASA,EACTtF,MAAOA,EACPD,QAASA,Q,GA5CYiE,IAAMC,W,wUCKnC,IAAM/F,GAAYC,IAAOC,IAAV,MAITuH,GAAOxH,IAAOyH,KAAV,MAKJC,GAAQ1H,IAAO2H,MAAV,MAiFIC,GA3ES,SAAC,GAAD,IACtBC,EADsB,EACtBA,aACAC,EAFsB,EAEtBA,UACAlG,EAHsB,EAGtBA,QACAmG,EAJsB,EAItBA,WACAC,EALsB,EAKtBA,aACAnG,EANsB,EAMtBA,MACAoG,EAPsB,EAOtBA,WAPsB,OAStB,eAAC,GAAD,WACE,cAACnG,EAAA,EAAD,UACE,uDAEF,cAAC0F,GAAD,CAAMU,SAAUF,EAAhB,SACE,cAACN,GAAD,CACES,YAAY,+BACZC,MAAOL,EACPM,SAAUJ,MAGbrG,EACC,cAACG,EAAD,IAEA,qCACG8F,GAAgBA,EAAahF,OAAS,GACrC,cAAC,GAAD,CAASoD,MAAM,gBAAf,SACG4B,EAAanF,KAAI,SAAC2E,GAAD,OAChB,cAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACVoC,SAAUS,EAAMlF,YAChB8D,MAAOoB,EAAMrF,eACb6E,OAAQQ,EAAMC,aACdR,KAAMO,EAAMhF,aACZ6C,SAAS,GANJmC,EAAM7C,SAWlBsD,GAAaA,EAAUjF,OAAS,GAC/B,cAAC,GAAD,CAASoD,MAAM,kBAAf,SACG6B,EAAUpF,KAAI,SAAC4F,GAAD,OACb,cAAC,GAAD,CAEE9D,GAAI8D,EAAK9D,GACToC,SAAU0B,EAAKnG,YACf8D,MAAOqC,EAAKrG,cACZ4E,OAAQyB,EAAKhB,aACbR,KAAMwB,EAAKhG,gBALNgG,EAAK9D,SAUjB3C,GAAS,cAAC,GAAD,CAASuE,MAAM,UAAUE,KAAMzE,IACxCiG,GACCD,GACqB,IAArBC,EAAUjF,QACc,IAAxBgF,EAAahF,QACX,cAAC,GAAD,CAASyD,KAAK,gBAAgBF,MAAM,mBChFjCmC,G,4MCGbtD,MAAQ,CACN4C,aAAc,KACdC,UAAW,KACXC,WAAY,GACZnG,SAAS,EACTC,MAAO,M,EAGTmG,aAAe,SAACQ,GACdA,EAAMC,iBAEa,KADI,EAAKxD,MAApB8C,YAEN,EAAKW,gB,EAITT,WAAa,SAACO,GAAW,IAEXJ,EACRI,EADFvF,OAAUmF,MAEZ,EAAKxC,SAAS,CACZmC,WAAYK,K,EAIhBM,a,sBAAe,oCAAAvH,EAAA,6DACL4G,EAAe,EAAK9C,MAApB8C,WACR,EAAKnC,SAAS,CAAEhE,SAAS,IAFZ,kBAMD0C,GAAiByD,GANhB,uBAKQF,EALR,EAKTlC,KAAQpC,QALC,SASDsB,GAAakD,GATZ,gBAQQD,EARR,EAQTnC,KAAQpC,QAEV,EAAKqC,SAAS,CACZiC,eACAC,cAZS,kDAeX,EAAKlC,SAAS,CAAE/D,MAAO,wBAfZ,yBAiBX,EAAK+D,SAAS,CAAEhE,SAAS,IAjBd,6E,uDAqBL,IAAD,EACyDwD,KAAKH,MAA7D4C,EADD,EACCA,aAAcC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,WAAYnG,EADtC,EACsCA,QAASC,EAD/C,EAC+CA,MACtD,OACE,cAAC,GAAD,CACEgG,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZnG,QAASA,EACTC,MAAOA,EACPmG,aAAc5C,KAAK4C,aACnBC,WAAY7C,KAAK6C,iB,GAzDIpC,IAAMC,W,2FCKnC,IAAM/F,GAAYC,IAAOC,IAAV,MAqEA0I,GAjEK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUzB,EAAb,EAAaA,QAAS0B,EAAtB,EAAsBA,YAAajH,EAAnC,EAAmCA,QAASC,EAA5C,EAA4CA,MAA5C,OAClB,qCACE,cAACC,EAAA,EAAD,UACE,yDAEDF,EACC,cAACG,EAAD,IAEA,eAAC,GAAD,WACG6G,GAAYA,EAAS/F,OAAS,GAC7B,cAAC,GAAD,CAASoD,MAAM,kBAAf,SACG2C,EAASlG,KAAI,SAAC4F,GAAD,OACZ,cAAC,GAAD,CAEE9D,GAAI8D,EAAK9D,GACToC,SAAU0B,EAAKnG,YACf8D,MAAOqC,EAAKrG,cACZ4E,OAAQyB,EAAKhB,aACbR,KAAMwB,EAAKhG,gBALNgG,EAAK9D,SAUjB2C,GAAWA,EAAQtE,OAAS,GAC3B,cAAC,GAAD,CAASoD,MAAM,gBAAf,SACGkB,EAAQzE,KAAI,SAAC4F,GAAD,OACX,cAAC,GAAD,CAEE9D,GAAI8D,EAAK9D,GACToC,SAAU0B,EAAKnG,YACf8D,MAAOqC,EAAKrG,cACZ4E,OAAQyB,EAAKhB,aACbR,KAAMwB,EAAKhG,gBALNgG,EAAK9D,SAUjBqE,GAAeA,EAAYhG,OAAS,GACnC,cAAC,GAAD,CAASoD,MAAM,eAAf,SACG4C,EAAYnG,KAAI,SAAC4F,GAAD,OACf,cAAC,GAAD,CAEE9D,GAAI8D,EAAK9D,GACToC,SAAU0B,EAAKnG,YACf8D,MAAOqC,EAAKrG,cACZ4E,OAAQyB,EAAKhB,aACbR,KAAMwB,EAAKhG,gBALNgG,EAAK9D,SAUjB3C,GAAS,cAAC,GAAD,CAASuE,MAAM,UAAUE,KAAMzE,WC9DlCiH,G,4MCGb7D,MAAQ,CACN2D,SAAU,KACVzB,QAAS,KACT0B,YAAa,KACbjH,SAAS,EACTC,MAAO,M,qNAOKgD,K,uBADS+D,E,EAAjBjD,KAAQpC,Q,SAIAsB,K,uBADSsC,E,EAAjBxB,KAAQpC,Q,UAIAsB,K,iBADSgE,E,EAAjBlD,KAAQpC,QAEV6B,KAAKQ,SAAS,CAAEgD,WAAUzB,UAAS0B,gB,kDAEnCzD,KAAKQ,SAAS,CACZ/D,MAAO,+B,yBAGTuD,KAAKQ,SAAS,CAAEhE,SAAS,I,kKAInB,IAAD,EACoDwD,KAAKH,MAAxD2D,EADD,EACCA,SAAUzB,EADX,EACWA,QAAS0B,EADpB,EACoBA,YAAajH,EADjC,EACiCA,QAASC,EAD1C,EAC0CA,MACjD,OACE,cAAC,GAAD,CACE+G,SAAUA,EACVzB,QAASA,EACT0B,YAAaA,EACbjH,QAASA,EACTC,MAAOA,Q,GAtCcgE,IAAMC,W,mzBCAnC,IAAMiD,GAAS/I,IAAOgJ,OAAV,MAcNC,GAAOjJ,IAAOkJ,GAAV,MAIJrI,GAAOb,IAAOmJ,GAAV,MAKJ,SAAC9I,GAAD,OAAYA,EAAM+I,QAAU,UAAY,iBAIxCC,GAAQrJ,YAAOsJ,IAAPtJ,CAAH,MAOIuJ,gBAAW,gBAAexE,EAAf,EAAGC,SAAYD,SAAf,OACxB,cAACgE,GAAD,UACE,eAACE,GAAD,WACE,cAAC,GAAD,CAAMG,QAAsB,MAAbrE,EAAf,SACE,cAACsE,GAAD,CAAOtC,GAAG,IAAV,sBAEF,cAAC,GAAD,CAAMqC,QAAsB,QAAbrE,EAAf,SACE,cAACsE,GAAD,CAAOtC,GAAG,MAAV,kBAEF,cAAC,GAAD,CAAMqC,QAAsB,YAAbrE,EAAf,SACE,cAACsE,GAAD,CAAOtC,GAAG,UAAV,8BCnCO,qBACb,eAAC,IAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyC,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,cAAC,IAAD,CAAOH,KAAK,MAAME,UAAWE,KAE7B,cAAC,IAAD,CAAOJ,KAAK,UAAUE,UAAWG,KACjC,cAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWI,KACpC,cAAC,IAAD,CAAON,KAAK,YAAYE,UAAWI,KACnC,cAAC,IAAD,CAAUC,KAAK,IAAIhD,GAAG,a,8eCpB5B,IAkBeiD,GAlBMC,YAAH,KACZC,MCSSC,OATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAACC,GAAD,IACA,cAACC,GAAD,QCJNC,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.080abac0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.5b53081c.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport YouTube from \"react-youtube\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0 10px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst Icon = styled.a``;\n\nconst Image = styled.img`\n  width: 40px;\n  height: 40px;\n  vertical-align: middle;\n  display: inline-block;\n  padding-bottom: 5px;\n`;\n\nconst Info = styled.div`\n  margin-top: 20px;\n`;\n\nconst Trailer = styled(YouTube)`\n  width: 100%;\n  height: 300px;\n`;\n\nconst Production = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0px 40px;\n  margin: 10px 0;\n  font-weight: bold;\n  font-size: 15px;\n  height: 100px;\n  justify-content: space-around;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date\n                : result.first_air_date}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            <Divider>•</Divider>\n            {result.imdb_id ? (\n              <Icon\n                href={`https://www.imdb.com/title/${result.imdb_id}`}\n                target=\"_blank\"\n              >\n                <Image\n                  src=\"https://img.icons8.com/color/2x/imdb.png\"\n                  alt=\"Link to IMDb\"\n                ></Image>\n              </Icon>\n            ) : (\n              <Item>{\"No Info in IMDB\"}</Item>\n            )}\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <Info>\n            {result.videos.results[0] !== undefined ? (\n              <Trailer videoId={result.videos.results.key}></Trailer>\n            ) : (\n              <Item>NO Trailer on YouTube</Item>\n            )}\n            {}\n            <Production>\n              {result.production_companies[0] !== undefined ? (\n                <Item>\n                  {`✅ Production Companies : ` +\n                    result.production_companies.map((e, index) => ` ${e.name}`)}\n                </Item>\n              ) : (\n                <Item>\n                  ✅ Production Companies : NO INFO of Production Company\n                </Item>\n              )}\n              {result.production_countries ? (\n                <Item>\n                  {`✅  Production Countries : ` +\n                    result.production_countries.map((e, index) => ` ${e.name}`)}\n                </Item>\n              ) : (\n                <Item>\n                  ✅ Production Countries : NO INFO of Production Countries\n                </Item>\n              )}\n              {result.seasons ? (\n                <Item>\n                  {`✅  Another Seasons : ` +\n                    result.seasons.map(\n                      (e) => ` ${e.season_number} / ${e.name}`\n                    )}\n                </Item>\n              ) : (\n                <Item></Item>\n              )}\n            </Production>\n          </Info>\n        </Data>\n      </Content>\n    </Container>\n  );\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out; //10923b261ba94d897acGb81148314a3f\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Detail from \"Routes/Detail\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/Tv\";\nimport Header from \"./Header\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      {/* <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} /> */}\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\"></Redirect>\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import Router from \"Components/Router\";\nimport Header from \"Components/Header\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n      <GlobalStyles />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}